{"version":3,"sources":["core/Layout.js","config.js","auth/index.js","user/Signup.js","user/Signin.js","core/apiCore.js","core/ShowImage.js","core/Card.js","core/cartHelpers.js","core/Search.js","core/Home.js","core/Menu.js","auth/PrivateRoute.js","user/UserDashboard.js","user/apiUser.js","auth/AdminRoute.js","user/AdminDashboard.js","admin/apiAdmin.js","admin/AddCategory.js","admin/AddProduct.js","core/Checkbox.js","core/RadioBox.js","core/fixedPrices.js","core/Shop.js","core/Product.js","core/Checkout.js","core/Cart.js","core/about.js","admin/Orders.js","user/Profile.js","admin/ManageProducts.js","admin/UpdateProduct.js","admin/updateCategory.js","Routes.js","index.js"],"names":["Layout","title","description","className","children","API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","Signup","useState","name","email","password","error","success","values","setValues","handleChange","event","target","value","clickSubmit","user","preventDefault","fetch","method","headers","Accept","body","stringify","then","response","json","catch","err","console","log","data","style","display","to","onChange","type","onClick","Signin","loading","redirectToReferrer","signin","next","setItem","authenticate","role","getProducts","sortBy","getCategories","getFilteredProducts","skip","limit","filters","ShowImage","item","url","src","_id","alt","maxHeight","maxWidth","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","redirect","setRedirect","count","setCount","addToCart","cart","push","Array","from","Set","map","p","id","find","addItem","productId","i","updateItem","shouldRedirect","substring","price","category","moment","createdAt","fromNow","quantity","showViewButton","showAddToCartBtn","splice","removeItem","showRemoveButton","showCartUpdateOptions","Search","categories","search","results","searched","setData","useEffect","searchData","params","query","queryString","list","searchSubmit","e","searchMessage","length","onSubmit","c","key","placeholder","border","searchedProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","setError","isActive","history","path","location","pathname","color","withRouter","cursor","signout","PrivateRoute","Component","component","rest","render","props","state","Dashboard","setHistory","token","init","userId","Authorization","getPurchaseHistory","h","products","purchaseHistory","AdminRoute","AdminDashboard","AddCategory","setName","setSuccess","createCategory","showSuccess","showError","autoFocus","required","AddProduct","shipping","photo","createdProduct","redirectToProfile","formData","FormData","files","set","createProduct","accept","Checkbox","handleFilters","checked","setCheked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","RadioBox","prices","setValue","array","Shop","myFilters","setMyFilters","setCategories","setSkip","size","setSize","filteredResults","setFilteredResults","loadFilteredResults","newFilters","loadMore","toSkip","filterBy","priceValues","handlePrice","parseInt","Product","setProduct","relatedProduct","setRelatedProduct","loadSingleProduct","read","listRelated","match","Checkout","clientToken","instance","address","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","nextValue","deliveryAddress","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","amount","processPayment","createOrderData","transaction_id","transaction","order","createOrder","message","showDropIn","onBlur","options","authorization","paypal","flow","onInstance","Cart","items","setItems","showItems","About","class","href","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","readOnly","handleStatusChange","orderId","status","updateOrderStatus","o","oIndex","borderBottom","index","showStatus","pIndex","padding","Profile","update","alert","auth","updateUser","profileUpdate","redirectUser","ManageProducts","setProducts","loadProducts","destroy","deleteProduct","UpdateProduct","getProduct","initCategories","updateProduct","UpdateCategory","categoryId","getCategory","submitCategoryForm","updateCategory","data-dismiss","aria-label","aria-hidden","Routes","exact","about","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5a93f41.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../styles.css\"; \r\n\r\nconst Layout = ({title='Title',description='Description',className,children}) => (\r\n    <div>\r\n        <div className=\"jumbotron\">\r\n            <h2>{title}</h2>\r\n            <p className=\"lead\">{description}</p>\r\n        </div>\r\n        <div className={className}>{children}</div>\r\n    </div>\r\n);\r\n\r\nexport default Layout;","export const API = process.env.REACT_APP_API_URL;","import { API } from '../config';\r\n\r\nexport const signup = user => {\r\n    return fetch(`${API}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const signin = user => {\r\n    return fetch(`${API}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(data));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const signout = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('jwt');\r\n        next();\r\n        return fetch(`${API}/signout`, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => {\r\n                console.log('signout', response);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == 'undefined') {\r\n        return false;\r\n    }\r\n    if (localStorage.getItem('jwt')) {\r\n        return JSON.parse(localStorage.getItem('jwt'));\r\n    } else {\r\n        return false;\r\n    }\r\n};","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from '../core/Layout';\r\nimport { signup } from '../auth';\r\n\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false\r\n    });\r\n\r\n    const { name, email, password, success, error } = values;\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false });\r\n        signup({ name, email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, success: false });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    email: '',\r\n                    password: '',\r\n                    error: '',\r\n                    success: true\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            New account is created. Please <Link to=\"/signin\">Signin</Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signup\"\r\n            description=\"Signup to Node React E-commerce App\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {showSuccess()}\r\n            {showError()}\r\n            {signUpForm()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signup;","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    });\r\n\r\n    const { email, password, loading, error, redirectToReferrer } = values;\r\n    const { user } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n        signin({ email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, loading: false });\r\n            } else {\r\n                authenticate(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        redirectToReferrer: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input\r\n                    onChange={handleChange(\"email\")}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input\r\n                    onChange={handleChange(\"password\")}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-info\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            if (user && user.role === 1) {\r\n                return <Redirect to=\"/admin/dashboard\" />;\r\n            } else {\r\n                return <Redirect to=\"/user/dashboard\" />;\r\n            }\r\n        }\r\n        if (isAuthenticated()) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signin\"\r\n            description=\"Signin to Node React E-commerce App\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {showLoading()}\r\n            {showError()}\r\n            {signUpForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signin;","import { API } from \"../config\";\r\nimport queryString from \"query-string\";\r\n\r\nexport const getProducts = sortBy => {\r\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\r\n    const data = {\r\n        limit,\r\n        skip,\r\n        filters\r\n    };\r\n    return fetch(`${API}/products/by/search`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const list = params => {\r\n    const query = queryString.stringify(params);\r\n    console.log(\"query\", query);\r\n    return fetch(`${API}/products/search?${query}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const read = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listRelated = productId => {\r\n    return fetch(`${API}/products/related/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getBraintreeClientToken = (userId, token) => {\r\n    return fetch(`${API}/braintree/getToken/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const processPayment = (userId, token, paymentData) => {\r\n    return fetch(`${API}/braintree/payment/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(paymentData)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n    return fetch(`${API}/order/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ order: createOrderData })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};","import React from \"react\";\r\nimport { API } from \"../config\";\r\n\r\nconst ShowImage = ({ item, url }) => (\r\n    <div className=\"product-img\">\r\n        <img\r\n            src={`${API}/${url}/photo/${item._id}`}\r\n            alt={item.name}\r\n            className=\"mb-3\"\r\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default ShowImage;","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport { addItem, updateItem, removeItem } from './cartHelpers';\r\n\r\nconst Card = ({\r\n  product,\r\n  showViewProductButton = true,\r\n  showAddToCartButton = true,\r\n  cartUpdate = false,\r\n  showRemoveProductButton = false,\r\n  setRun = f => f,\r\n  run = undefined\r\n  // changeCartSize\r\n}) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [count, setCount] = useState(product.count);\r\n\r\n  const showViewButton = showViewProductButton => {\r\n    return (\r\n      showViewProductButton && (\r\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n          <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\r\n        </Link>\r\n      )\r\n    );\r\n  };\r\n  const addToCart = () => {\r\n    // console.log('added');\r\n    addItem(product, setRedirect(true));\r\n  };\r\n\r\n  const shouldRedirect = redirect => {\r\n    if (redirect) {\r\n      return <Redirect to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const showAddToCartBtn = showAddToCartButton => {\r\n    return (\r\n      showAddToCartButton && (\r\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\r\n          Add to cart\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const showStock = quantity => {\r\n    return quantity > 0 ? (\r\n      <span className=\"badge badge-primary badge-pill\">In Stock </span>\r\n    ) : (\r\n      <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\r\n    );\r\n  };\r\n\r\n  const handleChange = productId => event => {\r\n    setRun(!run); // run useEffect in parent Cart\r\n    setCount(event.target.value < 1 ? 1 : event.target.value);\r\n    if (event.target.value >= 1) {\r\n      updateItem(productId, event.target.value);\r\n    }\r\n  };\r\n\r\n  const showCartUpdateOptions = cartUpdate => {\r\n    return (\r\n      cartUpdate && (\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Adjust Quantity</span>\r\n            </div>\r\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n  const showRemoveButton = showRemoveProductButton => {\r\n    return (\r\n      showRemoveProductButton && (\r\n        <button\r\n          onClick={() => {\r\n            removeItem(product._id);\r\n            setRun(!run); // run useEffect in parent Cart\r\n          }}\r\n          className=\"btn btn-outline-danger mt-2 mb-2\"\r\n        >\r\n          Remove Product\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"card \">\r\n      <div className=\"card-header card-header-1 \">{product.name}</div>\r\n      <div className=\"card-body\">\r\n        {shouldRedirect(redirect)}\r\n        <ShowImage item={product} url=\"product\" />\r\n        <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\r\n        <p className=\"card-p black-10\">₹ {product.price}</p>\r\n        <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n        <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n        {showStock(product.quantity)}\r\n        <br />\r\n\r\n        {showViewButton(showViewProductButton)}\r\n\r\n        {showAddToCartBtn(showAddToCartButton)}\r\n\r\n        {showRemoveButton(showRemoveProductButton)}\r\n\r\n        {showCartUpdateOptions(cartUpdate)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","export const addItem = (item = [], count = 0, next = f => f) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        // remove duplicates\r\n        // build an Array from new Set and turn it back into array using Array.from\r\n        // so that later we can re-map it\r\n        // new set will only allow unique values in it\r\n        // so pass the ids of each object/product\r\n        // If the loop tries to add the same value again, it'll get ignored\r\n        // ...with the array of ids we got on when first map() was used\r\n        // run map() on it again and return the actual product from the cart\r\n\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n};\r\n\r\nexport const removeItem = productId => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1);\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n\r\nexport const emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { getCategories, list } from \"./apiCore\";\r\nimport Card from \"./Card\";\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: \"\",\r\n        search: \"\",\r\n        results: [],\r\n        searched: false\r\n    });\r\n\r\n    const { categories, category, search, results, searched } = data;\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setData({ ...data, categories: data });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const searchData = () => {\r\n        // console.log(search, category);\r\n        if (search) {\r\n            list({ search: search || undefined, category: category }).then(\r\n                response => {\r\n                    if (response.error) {\r\n                        console.log(response.error);\r\n                    } else {\r\n                        setData({ ...data, results: response, searched: true });\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    const searchSubmit = e => {\r\n        e.preventDefault();\r\n        searchData();\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        setData({ ...data, [name]: event.target.value, searched: false });\r\n    };\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if (searched && results.length > 0) {\r\n            return `Found ${results.length} products`;\r\n        }\r\n        if (searched && results.length < 1) {\r\n            return `No products found`;\r\n        }\r\n    };\r\n\r\n    const searchedProducts = (results = []) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-4 mb-4\">\r\n                    {searchMessage(searched, results)}\r\n                </h2>\r\n\r\n                <div className=\"row\">\r\n                    {results.map((product, i) => (\r\n                        <div className=\"col-4 mb-3\">\r\n                            <Card key={i} product={product} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select\r\n                            className=\"btn mr-2\"\r\n                            onChange={handleChange(\"category\")}\r\n                        >\r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c, i) => (\r\n                                <option key={i} value={c._id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"search\")}\r\n                        placeholder=\"Search by name\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"btn input-group-append\"\r\n                    style={{ border: \"none\" }}\r\n                >\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">{searchForm()}</div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { getProducts } from './apiCore';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([]);\r\n    const [productsByArrival, setProductsByArrival] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProductsBySell(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt').then(data => {\r\n            console.log(data);\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProductsByArrival(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival();\r\n        loadProductsBySell();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout\r\n            title=\"FullStack React Node MongoDB Ecommerce App\"\r\n            description=\"Node React E-commerce App\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <Search />\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { signout, isAuthenticated } from \"../auth\";\r\nimport { itemTotal } from \"./cartHelpers\";\r\n\r\n\r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { color: \"#ff9900\" };\r\n    } else {\r\n        return { color: \"#ffffff\" };\r\n    }\r\n};\r\n\r\nconst Menu = ({ history }) => (\r\n    <div>\r\n        <ul className=\"nav nav-tabs bg-primary\">\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/\")}\r\n                    to=\"/\"\r\n                >\r\n                    Home\r\n                </Link>\r\n            </li>\r\n\r\n            \r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/about\")}\r\n                    to=\"/about\"\r\n                >\r\n                   About\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Shop\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/cart\")}\r\n                    to=\"/cart\"\r\n                >\r\n                    Cart{\" \"}\r\n                    <sup>\r\n                        <small className=\"cart-badge\">{itemTotal()}</small>\r\n                    </sup>\r\n                </Link>\r\n            </li>\r\n\r\n            {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/user/dashboard\")}\r\n                        to=\"/user/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            )}\r\n\r\n            {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/admin/dashboard\")}\r\n                        to=\"/admin/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            )}\r\n\r\n            {!isAuthenticated() && (\r\n                <Fragment>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signin\")}\r\n                            to=\"/signin\"\r\n                        >\r\n                            Signin\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signup\")}\r\n                            to=\"/signup\"\r\n                        >\r\n                            Signup\r\n                        </Link>\r\n                    </li>\r\n\r\n                   \r\n\r\n\r\n                </Fragment>\r\n            )}\r\n\r\n            {isAuthenticated() && (\r\n                <li className=\"nav-item\">\r\n                    <span\r\n                        className=\"nav-link\"\r\n                        style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                        onClick={() =>\r\n                            signout(() => {\r\n                                history.push(\"/\");\r\n                            })\r\n                        }\r\n                    >\r\n                        Signout\r\n                    </span>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default withRouter(Menu);","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPurchaseHistory } from \"./apiUser\";\r\nimport moment from \"moment\";\r\n\r\nconst Dashboard = () => {\r\n    const [history, setHistory] = useState([]);\r\n\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n    const token = isAuthenticated().token;\r\n\r\n    const init = (userId, token) => {\r\n        getPurchaseHistory(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setHistory(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(_id, token);\r\n    }, []);\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">\r\n                            My Cart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\r\n                            Update Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const purchaseHistory = history => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase history</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        {history.map((h, i) => {\r\n                            return (\r\n                                <div>\r\n                                    <hr />\r\n                                    {h.products.map((p, i) => {\r\n                                        return (\r\n                                            <div key={i}>\r\n                                                <h6>Product name: {p.name}</h6>\r\n                                                <h6>\r\n                                                    Product price: ₹{p.price}\r\n                                                </h6>\r\n                                                <h6>\r\n                                                    Purchased date:{\" \"}\r\n                                                    {moment(\r\n                                                        p.createdAt\r\n                                                    ).fromNow()}\r\n                                                </h6>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLinks()}</div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory(history)}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","import { API } from \"../config\";\r\n\r\nexport const read = (userId, token) => {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const update = (userId, token, user) => {\r\n    return fetch(`${API}/user/${userId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateUser = (user, next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"jwt\")) {\r\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\r\n            auth.user = user;\r\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\r\n            next();\r\n        }\r\n    }\r\n};\r\n\r\nexport const getPurchaseHistory = (userId, token) => {\r\n    return fetch(`${API}/orders/by/user/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AdminRoute;","import React from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/category\">\r\n                            Create Category\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/product\">\r\n                            Create Product\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/orders\">\r\n                            View Orders\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/products\">\r\n                            Manage Products\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{adminLinks()}</div>\r\n                <div className=\"col-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;","import { API } from '../config';\r\n\r\nexport const createCategory = (userId, token, category) => {\r\n    return fetch(`${API}/category/create/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const updateCategory = (categoryId, userId, token, category) => {\r\n    return fetch(`${API}/category/${categoryId}/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            // content type?\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const createProduct = (userId, token, product) => {\r\n    return fetch(`${API}/product/create/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n    .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const getCategory = categoryId => {\r\n    return fetch(`${API}/category/${categoryId}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listOrders = (userId, token) => {\r\n    return fetch(`${API}/order/list/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getStatusValues = (userId, token) => {\r\n    return fetch(`${API}/order/status-values/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateOrderStatus = (userId, token, orderId, status) => {\r\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ status, orderId })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n/**\r\n * to perform crud on product\r\n * get all products\r\n * get a single product\r\n * update single product\r\n * delete single product\r\n */\r\n\r\nexport const getProducts = () => {\r\n    return fetch(`${API}/products?limit=undefined`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const deleteProduct = (productId, userId, token) => {\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getProduct = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateProduct = (productId, userId, token, product) => {\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};","import React, {  useState } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {isAuthenticated} from \"../auth\";\r\nimport Layout from \"../core/Layout\";\r\nimport {createCategory} from './apiAdmin';\r\n\r\n\r\n\r\nconst AddCategory=()=>{\r\n    const [name,setName]=useState('')\r\n    const [error,setError]=useState(false)\r\n    const [success,setSuccess]=useState(false)\r\n\r\n    const {user, token} = isAuthenticated();\r\n\r\n    const handleChange=(e)=>{\r\n        setError('')\r\n        setName(e.target.value)\r\n\r\n    }\r\n    const clickSubmit=(e)=>{\r\n        e.preventDefault()\r\n        setError('')\r\n        setSuccess(false);\r\n        createCategory(user._id,token,{name}).then(data => {\r\n            if(data.error){\r\n                setError(true);\r\n            } else {\r\n                setError(\"\");\r\n                setSuccess(true);\r\n            }\r\n        });\r\n        \r\n    };\r\n\r\n    const newCategoryForm=()=>(\r\n        <form onSubmit={clickSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" className=\"form-control\"\r\n                 onChange={handleChange} value={name} autoFocus required />\r\n                 <button className=\"btn btn-outline-primary\" >Create Category</button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    const showSuccess = ()=> {\r\n        if(success){\r\n            return <h3 className=\"text-success\">{name} is should be created</h3>\r\n        }\r\n    }\r\n\r\n    const showError=()=>{\r\n        if(error){\r\n            return <h3 className=\"text-danger\">Category is should be unique</h3>\r\n        }\r\n    }\r\n\r\n    const goBack=()=>(\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">Back to Dashboard</Link>\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n    <Layout title=\"Add new category\" description={`G'day ${user.name},ready to add a new category ?`} >\r\n        <div className=\"row\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n                \r\n                \r\n                {showSuccess()}\r\n                {showError()}\r\n                {newCategoryForm()}\r\n                {goBack()}\r\n            </div>\r\n        </div>\r\n    </Layout>\r\n\r\n    );\r\n};\r\nexport default AddCategory;","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { createProduct, getCategories } from './apiAdmin';\r\n\r\nconst AddProduct = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    // load categories and set form data\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    categories: data,\r\n                    formData: new FormData()\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: \"\", loading: true });\r\n\r\n        createProduct(user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is created!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddProduct;","import React, { useState } from \"react\";\r\n\r\nconst Checkbox = ({ categories, handleFilters }) => {\r\n    const [checked, setCheked] = useState([]);\r\n\r\n    const handleToggle = c => () => {\r\n        // return the first index or -1\r\n        const currentCategoryId = checked.indexOf(c);\r\n        const newCheckedCategoryId = [...checked];\r\n        // if currently checked was not already in checked state > push\r\n        // else pull/take off\r\n        if (currentCategoryId === -1) {\r\n            newCheckedCategoryId.push(c);\r\n        } else {\r\n            newCheckedCategoryId.splice(currentCategoryId, 1);\r\n        }\r\n        // console.log(newCheckedCategoryId);\r\n        setCheked(newCheckedCategoryId);\r\n        handleFilters(newCheckedCategoryId);\r\n    };\r\n\r\n    return categories.map((c, i) => (\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input\r\n                onChange={handleToggle(c._id)}\r\n                value={checked.indexOf(c._id === -1)}\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n            />\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ));\r\n};\r\n\r\nexport default Checkbox;","import React, { useState } from \"react\";\r\n\r\nconst RadioBox = ({ prices, handleFilters }) => {\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = event => {\r\n        handleFilters(event.target.value);\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return prices.map((p, i) => (\r\n        <div key={i}>\r\n            <input\r\n                onChange={handleChange}\r\n                value={`${p._id}`}\r\n                name={p}\r\n                type=\"radio\"\r\n                className=\"mr-2 ml-4\"\r\n            />\r\n            <label className=\"form-check-label\">{p.name}</label>\r\n        </div>\r\n    ));\r\n};\r\n\r\nexport default RadioBox;","export const prices = [\r\n    {\r\n        _id: 0,\r\n        name: \"Any\",\r\n        array: []\r\n    },\r\n    {\r\n        _id: 1,\r\n        name: \"₹0 to ₹9\",\r\n        array: [0, 9]\r\n    },\r\n    {\r\n        _id: 2,\r\n        name: \"₹10 to ₹19\",\r\n        array: [10, 19]\r\n    },\r\n    {\r\n        _id: 3,\r\n        name: \"₹20 to ₹29\",\r\n        array: [20, 29]\r\n    },\r\n    {\r\n        _id: 4,\r\n        name: \"₹30 to ₹39\",\r\n        array: [20, 29]\r\n    },\r\n    {\r\n        _id: 5,\r\n        name: \"More than ₹40\",\r\n        array: [40, 99]\r\n    }\r\n];","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport Card from \"./Card\";\r\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport RadioBox from \"./RadioBox\";\r\nimport { prices } from \"./fixedPrices\";\r\n\r\nconst Shop = () => {\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: { category: [], price: [] }\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [limit, setLimit] = useState(6);\r\n    const [skip, setSkip] = useState(0);\r\n    const [size, setSize] = useState(0);\r\n    const [filteredResults, setFilteredResults] = useState([]);\r\n\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadFilteredResults = newFilters => {\r\n        // console.log(newFilters);\r\n        getFilteredProducts(skip, limit, newFilters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults(data.data);\r\n                setSize(data.size);\r\n                setSkip(0);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadMore = () => {\r\n        let toSkip = skip + limit;\r\n        // console.log(newFilters);\r\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setFilteredResults([...filteredResults, ...data.data]);\r\n                setSize(data.size);\r\n                setSkip(toSkip);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadMoreButton = () => {\r\n        return (\r\n            size > 0 &&\r\n            size >= limit && (\r\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\r\n                    Load more\r\n                </button>\r\n            )\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n        loadFilteredResults(skip, limit, myFilters.filters);\r\n    }, []);\r\n\r\n    const handleFilters = (filters, filterBy) => {\r\n        // console.log(\"SHOP\", filters, filterBy);\r\n        const newFilters = { ...myFilters };\r\n        newFilters.filters[filterBy] = filters;\r\n\r\n        if (filterBy === \"price\") {\r\n            let priceValues = handlePrice(filters);\r\n            newFilters.filters[filterBy] = priceValues;\r\n        }\r\n        loadFilteredResults(myFilters.filters);\r\n        setMyFilters(newFilters);\r\n    };\r\n\r\n    const handlePrice = value => {\r\n        const data = prices;\r\n        let array = [];\r\n\r\n        for (let key in data) {\r\n            if (data[key]._id === parseInt(value)) {\r\n                array = data[key].array;\r\n            }\r\n        }\r\n        return array;\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shop Page\"\r\n            description=\"Search and find books of your choice\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-4\">\r\n                    <h4>Filter by categories</h4>\r\n                    <ul>\r\n                        <Checkbox\r\n                            categories={categories}\r\n                            handleFilters={filters =>\r\n                                handleFilters(filters, \"category\")\r\n                            }\r\n                        />\r\n                    </ul>\r\n\r\n                    <h4>Filter by price range</h4>\r\n                    <div>\r\n                        <RadioBox\r\n                            prices={prices}\r\n                            handleFilters={filters =>\r\n                                handleFilters(filters, \"price\")\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-8\">\r\n                    <h2 className=\"mb-4\">Products</h2>\r\n                    <div className=\"row\">\r\n                        {filteredResults.map((product, i) => (\r\n                            <div key={i} className=\"col-4 mb-3\">\r\n                                <Card product={product} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <hr />\r\n                    {loadMoreButton()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Shop;","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { read, listRelated } from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst Product = props => {\r\n    const [product, setProduct] = useState({});\r\n    const [relatedProduct, setRelatedProduct] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadSingleProduct = productId => {\r\n        read(productId).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProduct(data);\r\n                // fetch related products\r\n                listRelated(data._id).then(data => {\r\n                    if (data.error) {\r\n                        setError(data.error);\r\n                    } else {\r\n                        setRelatedProduct(data);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const productId = props.match.params.productId;\r\n        loadSingleProduct(productId);\r\n    }, [props]);\r\n\r\n    return (\r\n        <Layout\r\n            title={product && product.name}\r\n            description={product && product.description && product.description.substring(0, 100)}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    {product && product.description && <Card product={product} showViewProductButton={false} />}\r\n                </div>\r\n\r\n                <div className=\"col-4\">\r\n                    <h4>Related products</h4>\r\n                    {relatedProduct.map((p, i) => (\r\n                        <div className=\"mb-3\" key={i}>\r\n                            <Card product={p} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Product;","import React, { useState, useEffect } from 'react';\r\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\r\nimport { emptyCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\n// import \"braintree-web\"; // not using this package\r\nimport DropIn from 'braintree-web-drop-in-react';\r\n\r\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    });\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id;\r\n    const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n    const getToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setData({ ...data, error: data.error });\r\n            } else {\r\n                console.log(data);\r\n                setData({ clientToken: data.clientToken });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token);\r\n    }, []);\r\n\r\n    const handleAddress = event => {\r\n        setData({ ...data, address: event.target.value });\r\n    };\r\n\r\n    const getTotal = () => {\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0);\r\n    };\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticated() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    let deliveryAddress = data.address;\r\n\r\n    const buy = () => {\r\n        setData({ loading: true });\r\n        // send the nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n        let nonce;\r\n        let getNonce = data.instance\r\n            .requestPaymentMethod()\r\n            .then(data => {\r\n                // console.log(data);\r\n                nonce = data.nonce;\r\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\r\n                // and also total to be charged\r\n                // console.log(\r\n                //     \"send nonce and total to process: \",\r\n                //     nonce,\r\n                //     getTotal(products)\r\n                // );\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                };\r\n\r\n                processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                        // empty cart\r\n                        // create order\r\n\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress\r\n                        };\r\n\r\n                        createOrder(userId, token, createOrderData)\r\n                            .then(response => {\r\n                                emptyCart(() => {\r\n                                    setRun(!run); // run useEffect in parent Cart\r\n                                    console.log('payment success and empty cart');\r\n                                    setData({\r\n                                        loading: false,\r\n                                        success: true\r\n                                    });\r\n                                });\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                                setData({ loading: false });\r\n                            });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                        setData({ loading: false });\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // console.log(\"dropin error: \", error);\r\n                setData({ ...data, error: error.message });\r\n            });\r\n    };\r\n\r\n    const showDropIn = () => (\r\n        <div onBlur={() => setData({ ...data, error: '' })}>\r\n            {data.clientToken !== null && products.length > 0 ? (\r\n                <div>\r\n                    <div className=\"gorm-group mb-3\">\r\n                        <label className=\"text-muted\">Delivery address:</label>\r\n                        <textarea\r\n                            onChange={handleAddress}\r\n                            className=\"form-control\"\r\n                            value={data.address}\r\n                            placeholder=\"Type your delivery address here...\"\r\n                        />\r\n                    </div>\r\n\r\n                    <DropIn\r\n                        options={{\r\n                            authorization: data.clientToken,\r\n                            paypal: {\r\n                                flow: 'vault'\r\n                            },\r\n                            \r\n                        }}\r\n                        onInstance={instance => (data.instance = instance)}\r\n                    />\r\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\r\n                        Pay\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n\r\n    const showError = error => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = success => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            Thanks! Your payment was successful!\r\n        </div>\r\n    );\r\n\r\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: ₹{getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport { getCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [run, setRun] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setItems(getCart());\r\n    }, [run]);\r\n\r\n    const showItems = items => {\r\n        return (\r\n            <div>\r\n                <h2>Your cart has {`${items.length}`} items</h2>\r\n                <hr />\r\n                {items.map((product, i) => (\r\n                    <Card\r\n                        key={i}\r\n                        product={product}\r\n                        showAddToCartButton={false}\r\n                        cartUpdate={true}\r\n                        showRemoveProductButton={true}\r\n                        setRun={setRun}\r\n                        run={run}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const noItemsMessage = () => (\r\n        <h2>\r\n            Your cart is empty. <br /> <Link to=\"/shop\">Continue shopping</Link>\r\n        </h2>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shopping Cart\"\r\n            description=\"Manage your cart items. Add remove checkout or continue shopping.\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">{items.length > 0 ? showItems(items) : noItemsMessage()}</div>\r\n\r\n                <div className=\"col-6\">\r\n                    <h2 className=\"mb-4\">Your cart summary</h2>\r\n                    <hr />\r\n                    <Checkout products={items} setRun={setRun} run={run} />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Cart;","import React from 'react';\r\nimport \"../about.css\"; \r\n\r\n\r\nconst About=()=>{\r\n    return(\r\n        <>\r\n        <body>\r\n        <header class='masthead'>\r\n  <p class='masthead-intro'>Hi I'm</p>\r\n  <h1 class='masthead-heading'>Ajay Singh!</h1>\r\n  \r\n\r\n  <section class=\"introduction-section\">\r\n    <h1>.</h1>\r\n    <p>.</p>\r\n    <p>.</p>\r\n</section>\r\n<section class=\"location-section\">\r\n    <h1>.</h1>\r\n    <p>. </p>\r\n</section>\r\n<section class=\"questions-section\">\r\n    <h1>.</h1>\r\n    <h2>.</h2>\r\n    <p>.</p>\r\n    <h2>.</h2>\r\n    <p>.</p>\r\n    <h2>.</h2>\r\n    <p>.</p>\r\n    <h2>.</h2>\r\n    <p>.</p>\r\n</section>\r\n\r\n\r\n\r\n<footer class=\"content-footer\">\r\n    <p>Say hi to me on these social networks.</p>\r\n    <ul class=\"social\">\r\n        <li><a href=\"https://github.com/ajaysingh7623\" class=\"fa fa-github\"></a></li>\r\n        <li><a href=\"https://www.instagram.com/ajay_singh_cs/?hl=en\" class=\"fa fa-instagram\"></a></li>\r\n        <li><a href=\"https://www.linkedin.com/in/ajay-singh-3b1789114/\" class=\"fa fa-linkedin\"></a></li>\r\n    </ul>\r\n    \r\n</footer>\r\n</header>\r\n</body>\r\n\r\n</>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\r\nimport moment from \"moment\";\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [statusValues, setStatusValues] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setOrders(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setStatusValues(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadOrders();\r\n        loadStatusValues();\r\n    }, []);\r\n\r\n    const showOrdersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">\r\n                    Total orders: {orders.length}\r\n                </h1>\r\n            );\r\n        } else {\r\n            return <h1 className=\"text-danger\">No orders</h1>;\r\n        }\r\n    };\r\n\r\n    const showInput = (key, value) => (\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">{key}</div>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                className=\"form-control\"\r\n                readOnly\r\n            />\r\n        </div>\r\n    );\r\n\r\n    const handleStatusChange = (e, orderId) => {\r\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(\r\n            data => {\r\n                if (data.error) {\r\n                    console.log(\"Status update failed\");\r\n                } else {\r\n                    loadOrders();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const showStatus = o => (\r\n        <div className=\"form-group\">\r\n            <h3 className=\"mark mb-4\">Status: {o.status}</h3>\r\n            <select\r\n                className=\"form-control\"\r\n                onChange={e => handleStatusChange(e, o._id)}\r\n            >\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Orders\"\r\n            description={`G'day ${\r\n                user.name\r\n            }, you can manage all the orders here`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n\r\n                    {orders.map((o, oIndex) => {\r\n                        return (\r\n                            <div\r\n                                className=\"mt-5\"\r\n                                key={oIndex}\r\n                                style={{ borderBottom: \"5px solid indigo\" }}\r\n                            >\r\n                                <h2 className=\"mb-5\">\r\n                                    <span className=\"bg-primary\">\r\n                                        Order ID: {o._id}\r\n                                    </span>\r\n                                </h2>\r\n\r\n                                <ul className=\"list-group mb-2\">\r\n                                    <li className=\"list-group-item\">\r\n                                        {showStatus(o)}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Transaction ID: {o.transaction_id}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Amount:₹ {o.amount}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered by: {o.user.name}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered on:{\" \"}\r\n                                        {moment(o.createdAt).fromNow()}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Delivery address: {o.address}\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                    Total products in the order:{\" \"}\r\n                                    {o.products.length}\r\n                                </h3>\r\n\r\n                                {o.products.map((p, pIndex) => (\r\n                                    <div\r\n                                        className=\"mb-4\"\r\n                                        key={pIndex}\r\n                                        style={{\r\n                                            padding: \"20px\",\r\n                                            border: \"1px solid indigo\"\r\n                                        }}\r\n                                    >\r\n                                        {showInput(\"Product name\", p.name)}\r\n                                        {showInput(\"Product price\", p.price)}\r\n                                        {showInput(\"Product total\", p.count)}\r\n                                        {showInput(\"Product Id\", p._id)}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Orders;","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { read, update, updateUser } from './apiUser';\r\n\r\nconst Profile = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: false,\r\n        success: false\r\n    });\r\n\r\n    const { token } = isAuthenticated();\r\n    const { name, email, password, error, success } = values;\r\n\r\n    const init = userId => {\r\n        // console.log(userId);\r\n        read(userId, token).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: true });\r\n            } else {\r\n                setValues({ ...values, name: data.name, email: data.email });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.userId);\r\n    }, []);\r\n\r\n    const handleChange = name => e => {\r\n        setValues({ ...values, error: false, [name]: e.target.value });\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        update(match.params.userId, token, { name, email, password }).then(data => {\r\n            if (data.error) {\r\n                // console.log(data.error);\r\n                alert(data.error);\r\n            } else {\r\n                updateUser(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        name: data.name,\r\n                        email: data.email,\r\n                        success: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const redirectUser = success => {\r\n        if (success) {\r\n            return <Redirect to=\"/cart\" />;\r\n        }\r\n    };\r\n\r\n    const profileUpdate = (name, email, password) => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\r\n            </div>\r\n\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Layout title=\"Profile\" description=\"Update your profile\" className=\"container-fluid\">\r\n            <h2 className=\"mb-4\">Profile update</h2>\r\n            {profileUpdate(name, email, password)}\r\n            {redirectUser(success)}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProducts, deleteProduct } from \"./apiAdmin\";\r\n\r\nconst ManageProducts = () => {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const loadProducts = () => {\r\n        getProducts().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setProducts(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const destroy = productId => {\r\n        deleteProduct(productId, user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                loadProducts();\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Manage Products\"\r\n            description=\"Perform CRUD on products\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"text-center\">\r\n                        Total {products.length} products\r\n                    </h2>\r\n                    <hr />\r\n                    <ul className=\"list-group\">\r\n                        {products.map((p, i) => (\r\n                            <li\r\n                                key={i}\r\n                                className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                            >\r\n                                <strong>{p.name}</strong>\r\n                                <Link to={`/admin/product/update/${p._id}`}>\r\n                                    <span className=\"badge badge-warning badge-pill\">\r\n                                        Update\r\n                                    </span>\r\n                                </Link>\r\n                                <span\r\n                                    onClick={() => destroy(p._id)}\r\n                                    className=\"badge badge-danger badge-pill\"\r\n                                >\r\n                                    Delete\r\n                                </span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ManageProducts;","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: false,\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        // categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const init = productId => {\r\n        getProduct(productId).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    price: data.price,\r\n                    category: data.category._id,\r\n                    shipping: data.shipping,\r\n                    quantity: data.quantity,\r\n                    formData: new FormData()\r\n                });\r\n                // load categories\r\n                initCategories();\r\n            }\r\n        });\r\n    };\r\n\r\n    // load categories and set form data\r\n    const initCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.productId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    error: false,\r\n                    redirectToProfile: true,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is updated!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                return <Redirect to=\"/\" />;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                    {redirectUser()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateProduct;","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getCategory, updateCategory } from './apiAdmin';\r\n// {category: [\"5cd0258f2793ec6e100bc191\"], price: []}\r\n// http://localhost:3000/admin/category/update/5cd0258f2793ec6e100bc191\r\nconst UpdateCategory = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        error: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n\r\n    // destructure user and token from localStorage\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const { name, error, redirectToProfile } = values;\r\n\r\n    const init = categoryId => {\r\n        getCategory(categoryId, token).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.categoryId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const submitCategoryForm = e => {\r\n        e.preventDefault();\r\n        // update with ? you should send category name otherwise what to update?\r\n        const category = {\r\n            name: name\r\n        };\r\n        updateCategory(match.params.categoryId, user._id, token, category).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    error: false,\r\n                    redirectToProfile: true\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const updateCategoryForm = () => (\r\n        <div className=\"wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55\">\r\n            <form className=\"mb-5\" onSubmit={submitCategoryForm}>\r\n                <span className=\"login100-form-title p-b-32 m-b-7\">Update Category Form</span>\r\n                <span className=\"txt1 p-b-11\">Category Name</span>\r\n                <br />\r\n                <br />\r\n                <div className=\"wrap-input100 validate-input m-b-36\">\r\n                    <input\r\n                        onChange={handleChange('name')}\r\n                        value={name}\r\n                        className=\"input100\"\r\n                        type=\"text\"\r\n                        required\r\n                        name=\"name\"\r\n                    />\r\n                </div>\r\n                <div className=\"w-size25\">\r\n                    <button type=\"submit\" className=\"flex-c-m size2 bg1 bo-rad-23 hov1 m-text3 trans-0-4\">\r\n                        Save Changes\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className={'alert alert-danger'} role=\"alert\" style={{ display: error ? '' : 'none' }}>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                return <Redirect to=\"/admin/categories\" />;\r\n            }\r\n        }\r\n    };\r\n\r\n    const goBackBTN = () => {\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <Link to=\"/admin/categories\" className=\"text-info\">\r\n                    Back To Admin Home\r\n                </Link>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title={`Hi ${user.name}`}\r\n            description={`This is Update Product Action Page`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2 m-b-250 mb-5\">\r\n                    {showError()}\r\n                    {updateCategoryForm()}\r\n                    {goBackBTN()}\r\n                    {redirectUser()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateCategory;","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Signup from './user/Signup';\r\nimport Signin from './user/Signin';\r\nimport Home from './core/Home';\r\nimport Menu from './core/Menu';\r\nimport PrivateRoute from './auth/PrivateRoute';\r\nimport Dashboard from './user/UserDashboard';\r\nimport AdminRoute from './auth/AdminRoute';\r\nimport AdminDashboard from './user/AdminDashboard';\r\nimport AddCategory from './admin/AddCategory';\r\nimport AddProduct from './admin/AddProduct';\r\nimport Shop from './core/Shop';\r\nimport Product from './core/Product';\r\nimport Cart from './core/Cart';\r\nimport about from './core/about';\r\nimport Orders from './admin/Orders';\r\nimport Profile from './user/Profile';\r\nimport ManageProducts from './admin/ManageProducts';\r\nimport UpdateProduct from './admin/UpdateProduct';\r\nimport UpdateCategory from './admin/updateCategory';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n        <Menu />\r\n                \r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/signin\" exact component={Signin} />\r\n                <Route path=\"/signup\" exact component={Signup} />\r\n                \r\n                <Route path=\"/shop\" exact component={Shop} />\r\n                <Route path=\"/about\" exact component={about} />\r\n                \r\n                \r\n                <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard} />\r\n                <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\r\n                <AdminRoute path=\"/create/category\" exact component={AddCategory} />\r\n                <AdminRoute path=\"/create/product\" exact component={AddProduct} />\r\n                <Route path=\"/product/:productId\" exact component={Product} />\r\n                <Route path=\"/cart\" exact component={Cart} />\r\n                <AdminRoute path=\"/admin/orders\" exact component={Orders} />\r\n                <PrivateRoute path=\"/profile/:userId\" exact component={Profile} />\r\n                <PrivateRoute path=\"/admin/products\" exact component={ManageProducts} />\r\n                <AdminRoute path=\"/admin/product/update/:productId\" exact component={UpdateProduct} />\r\n                <AdminRoute path=\"/admin/category/update/:categoryId\" exact component={UpdateCategory} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Routes from './Routes';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}